"use strict";

function loadJquery() {
  $(document).ready(function () {
    $("#toggle-sidebar").click(function () {
      $('.ui.sidebar').sidebar('toggle');
    });
  });
}
"use strict";

function loadD3() {
  console.log("hello");
  d3.csv("data/document_topic_probability.json", function (x) {
    window.document_topic_probability = x;
    d3.csv("data/document_topic_probability.json", function (y) {
      window.topic_word_distribution_in_corpora = y;
      d3.csv("data/topic_word_probability_in_topic.json", function (z) {
        window.topic_word_probability_in_topic = z;
        loadVisualizations();
      });
    });
  });
}

function loadVisualizations() {}

function initPage1(topic_number) {
  var topic_words = window.document_topic_probability;
  var corpus_words = window.topic_word_distribution_in_corpora;
  var initStackedBarChart = {
    draw: function draw(config) {
      debugger;
      var me = this,
          domEle = config.element,
          stackKey = config.key,
          data = config.data[config.topic_number].values,
          margin = {
        top: 20,
        right: 20,
        bottom: 30,
        left: 50
      },
          width = 960 - margin.left - margin.right,
          height = 500 - margin.top - margin.bottom,
          xScale = d3.scaleLinear().rangeRound([0, width]),
          yScale = d3.scaleBand().rangeRound([height, 0]).padding(0.1),
          color = d3.scaleOrdinal(d3.schemeCategory20),
          xAxis = d3.axisBottom(xScale),
          yAxis = d3.axisLeft(yScale),
          svg = d3.select("#" + domEle).append("svg").attr("width", width + margin.left + margin.right).attr("height", height + margin.top + margin.bottom).append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
      var stack = d3.stack().keys(stackKey)
      /*.order(d3.stackOrder)*/
      .offset(d3.stackOffsetNone);
      var layers = stack(data);
      yScale.domain(data.map(function (d) {
        return d.keys[0];
      }));
      xScale.domain([0, 999]).nice();
      var layer = svg.selectAll(".layer").data(layers).enter().append("g").attr("class", "layer").style("fill", function (d, i) {
        return color(i);
      });
      layer.selectAll("rect").data(function (d) {
        return d;
      }).enter().append("rect").attr("y", function (d) {
        return yScale(d.data.values[0]);
      }).attr("x", function (d) {
        return xScale(d[0]);
      }).attr("height", yScale.bandwidth()).attr("width", function (d) {
        return xScale(d[1]) - xScale(d[0]);
      });
      svg.append("g").attr("class", "axis axis--x").attr("transform", "translate(0," + (height + 5) + ")").call(xAxis);
      svg.append("g").attr("class", "axis axis--y").attr("transform", "translate(0,0)").call(yAxis);
    }
  };
  var data = window.topic_word_probability_in_topic; // var data = [{"date":"TEXT","01":59,"03":33,"04":23},{"date":"DIFF","02":88,"03":1,"04":30},{"date":"ETCH","02":78,"03":81,"04":70},{"date":"ANNL","01":53,"03":12,"05":18},{"date":"FCOT","01":84,"02":27,"05":16},{"date":"PRNT","01A":72,"01A":14,"04B":42}];
  //var data = [{"date":"TEXT","TEXT01":59,"TEXT03":33,"TEXT04":23},{"date":"DIFF","DIFF02":88,"DIFF03":1,"DIFF04":30},{"date":"ETCH","ETCH02":78,"ETCH03":81,"ETCH04":70},{"date":"ANNL","ANNL01":53,"ANNL03":12,"ANNL05":18},{"date":"FCOT","FCOT01":84,"FCOT02":27,"FCOT05":16},{"date":"PRNT","PRNT01A":72,"PRNT01A":14,"PRNT04B":42}];
  //var key = ["TEXT01","TEXT02", "TEXT03", "TEXT04","DIFF01","DIFF02", "DIFF03", "DIFF04","DIFF05","ETCH01","ETCH02", "ETCH03", "ETCH04", "ETCH05","ANNL01","ANNL02", "ANNL03", "ANNL04", "ANNL05","FCOT01","FCOT02", "FCOT03", "FCOT04", "FCOT05", "PRNT01A", "PRNT01B", "PRNT02A", "PRNT02B", "PRNT01A", "PRNT03B", "PRNT04A", "PRNT04B"];

  var key = ["01", "02"];
  initStackedBarChart.draw({
    data: data,
    key: key,
    element: 'stacked-bar',
    topic_number: topic_number
  });
}

function initPage2() {}

function initPage3() {}
"use strict";
"use strict";

window.vueApp = new Vue({
  el: '#vue-app',
  data: {
    message: 'Hello user!',
    noneSelected: true,
    selectedPage: 1,
    playerDetail: {
      name: "<Player Name>"
    },
    overviewFilters: {},
    selectedMap: 1
  },
  methods: {
    selectPage: function selectPage(x) {
      this.selectedPage = x;

      if (x == 1) {
        initPage1(0);
      }

      if (x == 2) {
        initPage2();
      }

      if (x == 3) {
        initPage3();
      }
    }
  },
  mounted: function mounted() {
    console.log("Mounted");
    loadD3();
    loadJquery();
  }
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV2ZW50cy5qcyIsIm1haW4uanMiLCJ1dGlsLmpzIiwidnVlX21vZGVsLmpzIl0sIm5hbWVzIjpbImxvYWRKcXVlcnkiLCIkIiwiZG9jdW1lbnQiLCJyZWFkeSIsImNsaWNrIiwic2lkZWJhciIsImxvYWREMyIsImNvbnNvbGUiLCJsb2ciLCJkMyIsImNzdiIsIngiLCJ3aW5kb3ciLCJkb2N1bWVudF90b3BpY19wcm9iYWJpbGl0eSIsInkiLCJ0b3BpY193b3JkX2Rpc3RyaWJ1dGlvbl9pbl9jb3Jwb3JhIiwieiIsInRvcGljX3dvcmRfcHJvYmFiaWxpdHlfaW5fdG9waWMiLCJsb2FkVmlzdWFsaXphdGlvbnMiLCJpbml0UGFnZTEiLCJ0b3BpY19udW1iZXIiLCJ0b3BpY193b3JkcyIsImNvcnB1c193b3JkcyIsImluaXRTdGFja2VkQmFyQ2hhcnQiLCJkcmF3IiwiY29uZmlnIiwibWUiLCJkb21FbGUiLCJlbGVtZW50Iiwic3RhY2tLZXkiLCJrZXkiLCJkYXRhIiwidmFsdWVzIiwibWFyZ2luIiwidG9wIiwicmlnaHQiLCJib3R0b20iLCJsZWZ0Iiwid2lkdGgiLCJoZWlnaHQiLCJ4U2NhbGUiLCJzY2FsZUxpbmVhciIsInJhbmdlUm91bmQiLCJ5U2NhbGUiLCJzY2FsZUJhbmQiLCJwYWRkaW5nIiwiY29sb3IiLCJzY2FsZU9yZGluYWwiLCJzY2hlbWVDYXRlZ29yeTIwIiwieEF4aXMiLCJheGlzQm90dG9tIiwieUF4aXMiLCJheGlzTGVmdCIsInN2ZyIsInNlbGVjdCIsImFwcGVuZCIsImF0dHIiLCJzdGFjayIsImtleXMiLCJvZmZzZXQiLCJzdGFja09mZnNldE5vbmUiLCJsYXllcnMiLCJkb21haW4iLCJtYXAiLCJkIiwibmljZSIsImxheWVyIiwic2VsZWN0QWxsIiwiZW50ZXIiLCJzdHlsZSIsImkiLCJiYW5kd2lkdGgiLCJjYWxsIiwiaW5pdFBhZ2UyIiwiaW5pdFBhZ2UzIiwidnVlQXBwIiwiVnVlIiwiZWwiLCJtZXNzYWdlIiwibm9uZVNlbGVjdGVkIiwic2VsZWN0ZWRQYWdlIiwicGxheWVyRGV0YWlsIiwibmFtZSIsIm92ZXJ2aWV3RmlsdGVycyIsInNlbGVjdGVkTWFwIiwibWV0aG9kcyIsInNlbGVjdFBhZ2UiLCJtb3VudGVkIl0sIm1hcHBpbmdzIjoiOztBQUFBLFNBQVNBLFVBQVQsR0FBcUI7QUFDakJDLEVBQUFBLENBQUMsQ0FBQ0MsUUFBRCxDQUFELENBQVlDLEtBQVosQ0FBa0IsWUFBVTtBQUN4QkYsSUFBQUEsQ0FBQyxDQUFDLGlCQUFELENBQUQsQ0FBcUJHLEtBQXJCLENBQTJCLFlBQVU7QUFDakNILE1BQUFBLENBQUMsQ0FBQyxhQUFELENBQUQsQ0FDS0ksT0FETCxDQUNhLFFBRGI7QUFHSCxLQUpEO0FBTUgsR0FQRDtBQVFIOzs7QUNURCxTQUFTQyxNQUFULEdBQWlCO0FBQ2JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVo7QUFDQUMsRUFBQUEsRUFBRSxDQUFDQyxHQUFILENBQU8sc0NBQVAsRUFBK0MsVUFBU0MsQ0FBVCxFQUFXO0FBQ3REQyxJQUFBQSxNQUFNLENBQUNDLDBCQUFQLEdBQW1DRixDQUFuQztBQUNBRixJQUFBQSxFQUFFLENBQUNDLEdBQUgsQ0FBTyxzQ0FBUCxFQUErQyxVQUFTSSxDQUFULEVBQVc7QUFDdERGLE1BQUFBLE1BQU0sQ0FBQ0csa0NBQVAsR0FBMkNELENBQTNDO0FBQ0FMLE1BQUFBLEVBQUUsQ0FBQ0MsR0FBSCxDQUFPLDJDQUFQLEVBQW9ELFVBQVNNLENBQVQsRUFBVztBQUMzREosUUFBQUEsTUFBTSxDQUFDSywrQkFBUCxHQUF5Q0QsQ0FBekM7QUFDQUUsUUFBQUEsa0JBQWtCO0FBQ3JCLE9BSEQ7QUFJSCxLQU5EO0FBT0gsR0FURDtBQVVIOztBQUVELFNBQVNBLGtCQUFULEdBQTZCLENBRTVCOztBQUVELFNBQVNDLFNBQVQsQ0FBbUJDLFlBQW5CLEVBQWdDO0FBRS9CLE1BQUlDLFdBQVcsR0FBR1QsTUFBTSxDQUFDQywwQkFBekI7QUFDQSxNQUFJUyxZQUFZLEdBQUdWLE1BQU0s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UDhELFFBQUFBLFNBQVM7QUFDWjs7QUFDRCxVQUFJOUQsQ0FBQyxJQUFJLENBQVQsRUFBVztBQUNQK0QsUUFBQUEsU0FBUztBQUNaO0FBQ0o7QUFaSSxHQVpXO0FBMEJwQmEsRUFBQUEsT0FBTyxFQUFFLG1CQUFVO0FBQ2ZoRixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxTQUFaO0FBQ0FGLElBQUFBLE1BQU07QUFDTk4sSUFBQUEsVUFBVTtBQUNiO0FBOUJtQixDQUFSLENBQWhCIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGxvYWRKcXVlcnkoKXtcbiAgICAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpe1xuICAgICAgICAkKFwiI3RvZ2dsZS1zaWRlYmFyXCIpLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAkKCcudWkuc2lkZWJhcicpXG4gICAgICAgICAgICAgICAgLnNpZGViYXIoJ3RvZ2dsZScpXG4gICAgICAgICAgICA7XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICB9KTtcbn1cbiIsImZ1bmN0aW9uIGxvYWREMygpe1xuICAgIGNvbnNvbGUubG9nKFwiaGVsbG9cIik7XG4gICAgZDMuY3N2KFwiZGF0YS9kb2N1bWVudF90b3BpY19wcm9iYWJpbGl0eS5qc29uXCIsIGZ1bmN0aW9uKHgpe1xuICAgICAgICB3aW5kb3cuZG9jdW1lbnRfdG9waWNfcHJvYmFiaWxpdHk9IHg7XG4gICAgICAgIGQzLmNzdihcImRhdGEvZG9jdW1lbnRfdG9waWNfcHJvYmFiaWxpdHkuanNvblwiLCBmdW5jdGlvbih5KXtcbiAgICAgICAgICAgIHdpbmRvdy50b3BpY193b3JkX2Rpc3RyaWJ1dGlvbl9pbl9jb3Jwb3JhPSB5O1xuICAgICAgICAgICAgZDMuY3N2KFwiZGF0YS90b3BpY193b3JkX3Byb2JhYmlsaXR5X2luX3RvcGljLmpzb25cIiwgZnVuY3Rpb24oeil7XG4gICAgICAgICAgICAgICAgd2luZG93LnRvcGljX3dvcmRfcHJvYmFiaWxpdHlfaW5fdG9waWMgPSB6O1xuICAgICAgICAgICAgICAgIGxvYWRWaXN1YWxpemF0aW9ucygpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBsb2FkVmlzdWFsaXphdGlvbnMoKXtcblxufVxuXG5mdW5jdGlvbiBpbml0UGFnZTEodG9waWNfbnVtYmVyKXtcblxuXHR2YXIgdG9waWNfd29yZHMgPSB3aW5kb3cuZG9jdW1lbnRfdG9waWNfcHJvYmFiaWxpdHk7XG5cdHZhciBjb3JwdXNfd29yZHMgPSB3aW5kb3cudG9waWNfd29yZF9kaXN0cmlidXRpb25faW5fY29ycG9yYTtcblxuXHR2YXIgaW5pdFN0YWNrZWRCYXJDaGFydCA9IHtcblx0ZHJhdzogZnVuY3Rpb24oY29uZmlnKSB7XG5cdFx0ZGVidWdnZXJcblx0XHR2YXIgbWUgPSB0aGlzLFxuXHRcdGRvbUVsZSA9IGNvbmZpZy5lbGVtZW50LFxuXHRcdHN0YWNrS2V5ID0gY29uZmlnLmtleSxcblx0XHRkYXRhID0gY29uZmlnLmRhdGFbY29uZmlnLnRvcGljX251bWJlcl0udmFsdWVzLFxuXHRcdG1hcmdpbiA9IHt0b3A6IDIwLCByaWdodDogMjAsIGJvdHRvbTogMzAsIGxlZnQ6IDUwfSxcblx0XHR3aWR0aCA9IDk2MCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0LFxuXHRcdGhlaWdodCA9IDUwMCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tLFxuXHRcdHhTY2FsZSA9IGQzLnNjYWxlTGluZWFyKCkucmFuZ2VSb3VuZChbMCwgd2lkdGhdKSxcblx0XHR5U2NhbGUgPSBkMy5zY2FsZUJhbmQoKS5yYW5nZVJvdW5kKFtoZWlnaHQsIDBdKS5wYWRkaW5nKDAuMSksXG5cdFx0Y29sb3IgPSBkMy5zY2FsZU9yZGluYWwoZDMuc2NoZW1lQ2F0ZWdvcnkyMCksXG5cdFx0eEF4aXMgPSBkMy5heGlzQm90dG9tKHhTY2FsZSksXG5cdFx0eUF4aXMgPSAgZDMuYXhpc0xlZnQoeVNjYWxlKSxcblx0XHRzdmcgPSBkMy5zZWxlY3QoXCIjXCIrZG9tRWxlKS5hcHBlbmQoXCJzdmdcIilcblx0XHRcdFx0LmF0dHIoXCJ3aWR0aFwiLCB3aWR0aCArIG1hcmdpbi5sZWZ0ICsgbWFyZ2luLnJpZ2h0KVxuXHRcdFx0XHQuYXR0cihcImhlaWdodFwiLCBoZWlnaHQgKyBtYXJnaW4udG9wICsgbWFyZ2luLmJvdHRvbSlcblx0XHRcdFx0LmFwcGVuZChcImdcIilcblx0XHRcdFx0LmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoXCIgKyBtYXJnaW4ubGVmdCArIFwiLFwiICsgbWFyZ2luLnRvcCArIFwiKVwiKTtcblxuXG5cdFx0dmFyIHN0YWNrID0gZDMuc3RhY2soKVxuXHRcdFx0LmtleXMoc3RhY2tLZXkpXG5cdFx0XHQvKi5vcmRlcihkMy5zdGFja09yZGVyKSovXG5cdFx0XHQub2Zmc2V0KGQzLnN0YWNrT2Zmc2V0Tm9uZSk7XG5cdFxuXHRcdHZhciBsYXllcnM9IHN0YWNrKGRhdGEpO1xuXHRcdFx0eVNjYWxlLmRvbWFpbihkYXRhLm1hcChmdW5jdGlvbihkKSB7IHJldHVybiBkLmtleXNbMF07IH0pKTtcblx0XHRcdHhTY2FsZS5kb21haW4oWzAsIDk5OV0pLm5pY2UoKTtcblxuXHRcdHZhciBsYXllciA9IHN2Zy5zZWxlY3RBbGwoXCIubGF5ZXJcIilcblx0XHRcdC5kYXRhKGxheWVycylcblx0XHRcdC5lbnRlcigpLmFwcGVuZChcImdcIilcblx0XHRcdC5hdHRyKFwiY2xhc3NcIiwgXCJsYXllclwiKVxuXHRcdFx0LnN0eWxlKFwiZmlsbFwiLCBmdW5jdGlvbihkLCBpKSB7IHJldHVybiBjb2xvcihpKTsgfSk7XG5cblx0XHQgIGxheWVyLnNlbGVjdEFsbChcInJlY3RcIilcblx0XHRcdCAgLmRhdGEoZnVuY3Rpb24oZCkgeyByZXR1cm4gZDsgfSlcblx0XHRcdC5lbnRlcigpLmFwcGVuZChcInJlY3RcIilcblx0XHRcdCAgLmF0dHIoXCJ5XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHlTY2FsZShkLmRhdGEudmFsdWVzWzBdKTsgfSlcblx0XHRcdCAgLmF0dHIoXCJ4XCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHhTY2FsZShkWzBdKTsgfSlcblx0XHRcdCAgLmF0dHIoXCJoZWlnaHRcIiwgeVNjYWxlLmJhbmR3aWR0aCgpKVxuXHRcdFx0ICAuYXR0cihcIndpZHRoXCIsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHhTY2FsZShkWzFdKSAtIHhTY2FsZShkWzBdKSB9KTtcbiAgICBcblx0XHRcdHN2Zy5hcHBlbmQoXCJnXCIpXG5cdFx0XHQuYXR0cihcImNsYXNzXCIsIFwiYXhpcyBheGlzLS14XCIpXG5cdFx0XHQuYXR0cihcInRyYW5zZm9ybVwiLCBcInRyYW5zbGF0ZSgwLFwiICsgKGhlaWdodCs1KSArIFwiKVwiKVxuXHRcdFx0LmNhbGwoeEF4aXMpO1xuXG5cdFx0XHRzdmcuYXBwZW5kKFwiZ1wiKVxuXHRcdFx0LmF0dHIoXCJjbGFzc1wiLCBcImF4aXMgYXhpcy0teVwiKVxuXHRcdFx0LmF0dHIoXCJ0cmFuc2Zvcm1cIiwgXCJ0cmFuc2xhdGUoMCwwKVwiKVxuXHRcdFx0LmNhbGwoeUF4aXMpO1x0XHRcdFx0XHRcdFx0XG5cdFx0fVxuXHR9XG5cdHZhciBkYXRhID0gd2luZG93LnRvcGljX3dvcmRfcHJvYmFiaWxpdHlfaW5fdG9waWM7XG5cdC8vIHZhciBkYXRhID0gW3tcImRhdGVcIjpcIlRFWFRcIixcIjAxXCI6NTksXCIwM1wiOjMzLFwiMDRcIjoyM30se1wiZGF0ZVwiOlwiRElGRlwiLFwiMDJcIjo4OCxcIjAzXCI6MSxcIjA0XCI6MzB9LHtcImRhdGVcIjpcIkVUQ0hcIixcIjAyXCI6NzgsXCIwM1wiOjgxLFwiMDRcIjo3MH0se1wiZGF0ZVwiOlwiQU5OTFwiLFwiMDFcIjo1MyxcIjAzXCI6MTIsXCIwNVwiOjE4fSx7XCJkYXRlXCI6XCJGQ09UXCIsXCIwMVwiOjg0LFwiMDJcIjoyNyxcIjA1XCI6MTZ9LHtcImRhdGVcIjpcIlBSTlRcIixcIjAxQVwiOjcyLFwiMDFBXCI6MTQsXCIwNEJcIjo0Mn1dO1xuXG4vL3ZhciBkYXRhID0gW3tcImRhdGVcIjpcIlRFWFRcIixcIlRFWFQwMVwiOjU5LFwiVEVYVDAzXCI6MzMsXCJURVhUMDRcIjoyM30se1wiZGF0ZVwiOlwiRElGRlwiLFwiRElGRjAyXCI6ODgsXCJESUZGMDNcIjoxLFwiRElGRjA0XCI6MzB9LHtcImRhdGVcIjpcIkVUQ0hcIixcIkVUQ0gwMlwiOjc4LFwiRVRDSDAzXCI6ODEsXCJFVENIMDRcIjo3MH0se1wiZGF0ZVwiOlwiQU5OTFwiLFwiQU5OTDAxXCI6NTMsXCJBTk5MMDNcIjoxMixcIkFOTkwwNVwiOjE4fSx7XCJkYXRlXCI6XCJGQ09UXCIsXCJGQ09UMDFcIjo4NCxcIkZDT1QwMlwiOjI3LFwiRkNPVDA1XCI6MTZ9LHtcImRhdGVcIjpcIlBSTlRcIixcIlBSTlQwMUFcIjo3MixcIlBSTlQwMUFcIjoxNCxcIlBSTlQwNEJcIjo0Mn1dO1xuLy92YXIga2V5ID0gW1wiVEVYVDAxXCIsXCJURVhUMDJcIiwgXCJURVhUMDNcIiwgXCJURVhUMDRcIixcIkRJRkYwMVwiLFwiRElGRjAyXCIsIFwiRElGRjAzXCIsIFwiRElGRjA0XCIsXCJESUZGMDVcIixcIkVUQ0gwMVwiLFwiRVRDSDAyXCIsIFwiRVRDSDAzXCIsIFwiRVRDSDA0XCIsIFwiRVRDSDA1XCIsXCJBTk5MMDFcIixcIkFOTkwwMlwiLCBcIkFOTkwwM1wiLCBcIkFOTkwwNFwiLCBcIkFOTkwwNVwiLFwiRkNPVDAxXCIsXCJGQ09UMDJcIiwgXCJGQ09UMDNcIiwgXCJGQ09UMDRcIiwgXCJGQ09UMDVcIiwgXCJQUk5UMDFBXCIsIFwiUFJOVDAxQlwiLCBcIlBSTlQwMkFcIiwgXCJQUk5UMDJCXCIsIFwiUFJOVDAxQVwiLCBcIlBSTlQwM0JcIiwgXCJQUk5UMDRBXCIsIFwiUFJOVDA0QlwiXTtcbiAgXG5cdHZhciBrZXkgPSBbXCIwMVwiLFwiMDJcIl07XG5cblx0aW5pdFN0YWNrZWRCYXJDaGFydC5kcmF3KHtcblx0XHRkYXRhOiBkYXRhLFxuXHRcdGtleToga2V5LFxuXHRcdGVsZW1lbnQ6ICdzdGFja2VkLWJhcicsXG5cdFx0dG9waWNfbnVtYmVyOiB0b3BpY19udW1iZXJcblx0fSk7XG5cbn1cblxuZnVuY3Rpb24gaW5pdFBhZ2UyKCl7XG5cbn1cblxuZnVuY3Rpb24gaW5pdFBhZ2UzKCl7XG5cbn0iLCIiLCJ3aW5kb3cudnVlQXBwID0gbmV3IFZ1ZSh7XG4gICAgZWw6ICcjdnVlLWFwcCcsXG4gICAgZGF0YToge1xuICAgICAgICBtZXNzYWdlOiAnSGVsbG8gdXNlciEnLFxuICAgICAgICBub25lU2VsZWN0ZWQ6IHRydWUsXG4gICAgICAgIHNlbGVjdGVkUGFnZTogMSxcbiAgICAgICAgcGxheWVyRGV0YWlsOiB7XG4gICAgICAgICAgICBuYW1lOiBcIjxQbGF5ZXIgTmFtZT5cIlxuICAgICAgICB9LFxuICAgICAgICBvdmVydmlld0ZpbHRlcnM6IHt9LFxuICAgICAgICBzZWxlY3RlZE1hcDogMVxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgICBzZWxlY3RQYWdlOiBmdW5jdGlvbih4KXtcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRQYWdlID0geDtcbiAgICAgICAgICAgIGlmICh4ID09IDEpe1xuICAgICAgICAgICAgICAgIGluaXRQYWdlMSgwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh4ID09IDIpe1xuICAgICAgICAgICAgICAgIGluaXRQYWdlMigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHggPT0gMyl7XG4gICAgICAgICAgICAgICAgaW5pdFBhZ2UzKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9LFxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uKCl7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiTW91bnRlZFwiKTtcbiAgICAgICAgbG9hZEQzKCk7XG4gICAgICAgIGxvYWRKcXVlcnkoKTtcbiAgICB9XG59KTsiXX0=
